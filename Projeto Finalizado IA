{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":8922034,"sourceType":"datasetVersion","datasetId":5366345}],"dockerImageVersionId":30746,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import pandas as pd\n\ndf = pd.read_csv(\"/kaggle/input/unifenas-pln-course-reviews/reviews.csv\")\n\ndf.shape","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-09-15T19:05:38.062969Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"reviews = df.pop(\"review_text\")\n\npolarity = df.pop(\"polarity\")\n\nreviews","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from sklearn.feature_extraction.text import TfidfVectorizer\n\ntfidf = TfidfVectorizer()\n\nX = tfidf.fit_transform(reviews)\n\nX.shape","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, y_train, y_test = train_test_split(X,polarity, test_size=0.3)\n\nX_train.shape","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from sklearn.tree import DecisionTreeClassifier\n\ndt = DecisionTreeClassifier()\n\ndt.fit(X_train, y_train)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from sklearn.metrics import accuracy_score\n\ny_pred = dt.predict(X_test)\n\naccuracy = accuracy_score(y_test, y_pred)\naccuracy","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from sklearn.svm import SVC\n\nsvm = SVC()\n\nsvm.fit(X_train, y_train)\n\ny_pred = svm.predict(X_test)\n\naccuracy = accuracy_score(y_test, y_pred)\n\naccuracy","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"texto = [\"NÃ£o gostei\"]\n\nprocessado = tfidf.transform(texto)\n\npredicao = svm.predict(processado)\n\nif(predicao[0] == 0.0):\n    print(\"O usuario odiou o produto\")\nelse:\n    print(\"O usuario amou o produto!\")","metadata":{"trusted":true},"execution_count":null,"outputs":[]}]}